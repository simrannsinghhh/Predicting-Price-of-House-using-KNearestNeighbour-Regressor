# -*- coding: utf-8 -*-
"""Predicting Price of House using KNearestNeighbour Regressor

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11fhczwnCAr1l26koP6QqYSQcl8454pj4
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error
import warnings
warnings.filterwarnings("ignore")

#Use pandas to get some insights into the data

import pandas as pd

url = "https://raw.githubusercontent.com/edyoda/data-science-complete-tutorial/master/Data/house_rental_data.csv.txt"
data = pd.read_csv(url)

print(data.shape)

data.head()

data.info()

data.isnull().sum()

data['Floor'].unique()

columns_list = data.columns
print(columns_list)

#Show some interesting visualization of the data (10 marks)

price_bedroom = data.groupby('Bedroom')['Price'].mean()

plt.figure(figsize=(8, 6))
price_bedroom.plot(kind='bar', color='lightgreen')
plt.title('Price by Number of Bedrooms')
plt.xlabel('Bedroom')
plt.ylabel('Price')
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()

#Manage data for training & testing (20)

from sklearn.model_selection import train_test_split

X = data.drop(['Unnamed: 0', 'Price'], axis=1)
y = data['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print("X_train shape:", X_train.shape)
print("X_test shape:", X_test.shape)
print("y_train shape:", y_train.shape)
print("y_test shape:", y_test.shape)

#Finding a better value of k (10)

-









